--Start by getting a feel for the data
/*
SELECT *
FROM subscriptions
ORDER BY segment DESC
LIMIT 100;
*/ 

--Determining the range of months in the dataset

/*
SELECT MIN(subscription_start) AS first_date, MAX(subscription_start) AS last_date
FROM subscriptions;
*/
-- Looking at churn for three months - January, February, and March 2017. We can't use December 2016 because subscriber's can't cancel in the first month' and we'd need April's cancellations to make much use of the march 2017 start date data

--I'd like to calculate churn rates for each segment
WITH months AS (
  SELECT '2017-01-01' as first_day, '2017-01-31' as last_day
  UNION
  SELECT '2017-02-01' as first_day, '2017-02-28' as last_day
  UNION
  SELECT '2017-03-01' as first_day,
  '2017-03-31' as last_day
),

cross_join AS ( 
  SELECT *
  FROM subscriptions
  CROSS JOIN months
),

status AS (
  SELECT id, first_day as month,  
      CASE 
         WHEN segment = '87' AND subscription_start < first_day AND (subscription_end > first_day OR subscription_end IS NULL) 
         THEN 1
         ELSE 0
      END AS is_active87,
      CASE
         WHEN  segment = '30' AND subscription_start < first_day AND (subscription_end > first_day OR subscription_end IS NULL)  THEN 1
         ELSE 0
      END AS is_active30
     ,
   CASE
    WHEN segment = '87' 
     AND subscription_start < first_day 
     AND (subscription_end 
       BETWEEN first_day AND last_day) 
    THEN 1
    ELSE 0
   END AS is_cancelled_87,
   CASE 
     WHEN segment = '30'
      AND subscription_start < first_day
      AND (subscription_end
        BETWEEN first_day AND last_day)
     THEN 1
     ELSE 0
    END AS is_cancelled_30
  FROM cross_join),

status_aggregate AS (
  SELECT SUM(is_active87) AS sum_active87, SUM(is_active30) AS sum_active30, SUM(is_cancelled_87) AS sum_canceled87, SUM(is_cancelled_30) AS sum_canceled30
  FROM status
)

SELECT ROUND(100.0*sum_canceled87/sum_active87, 2) AS '%Churn87', ROUND(100*sum_canceled30/sum_active30, 2) AS '%Churn30' FROM status_aggregate;

